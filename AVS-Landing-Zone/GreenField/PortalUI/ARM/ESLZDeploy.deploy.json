{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "6517183317222084840"
    }
  },
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AVS",
      "minLength": 1,
      "maxLength": 20,
      "metadata": {
        "description": "The prefix to use on resources inside this template"
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional: The location the private cloud should be deployed to, by default this will be the location of the deployment"
      }
    },
    "DeployPrivateCloud": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set this to false if the Private Cloud already exists"
      }
    },
    "PrivateCloudName": {
      "type": "string",
      "defaultValue": "[format('{0}-sddc', parameters('Prefix'))]",
      "metadata": {
        "description": "Optional: The location the private cloud should be deployed to, by default this will be the location of the deployment"
      }
    },
    "PrivateCloudResourceGroupName": {
      "type": "string",
      "defaultValue": "[format('{0}-PrivateCloud', parameters('Prefix'))]",
      "metadata": {
        "description": "Optional: The location the private cloud should be deployed to, by default this will be the location of the deployment"
      }
    },
    "PrivateCloudAddressSpace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The address space used for the AVS Private Cloud management networks. Must be a non-overlapping /22"
      }
    },
    "PrivateCloudSKU": {
      "type": "string",
      "defaultValue": "AV36P",
      "allowedValues": [
        "AV36",
        "AV36T",
        "AV36P",
        "AV36PT",
        "AV52"
      ],
      "metadata": {
        "description": "The SKU that should be used for the first cluster, ensure you have quota for the given SKU before deploying"
      }
    },
    "PrivateCloudHostCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of nodes to be deployed in the first/default cluster, ensure you have quota before deploying"
      }
    },
    "ExistingPrivateCloudName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Existing Private Cloud Name"
      }
    },
    "ExistingPrivateCloudResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Existing Private Cloud Id"
      }
    },
    "DeployNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "A string value to skip the networking deployment"
      }
    },
    "VNetExists": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set this to true if you are redeploying, and the VNet already exists"
      }
    },
    "NewNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[format('{0}-Network', parameters('Prefix'))]",
      "metadata": {
        "description": "The address space used for the VNet attached to AVS. Must be non-overlapping with existing networks"
      }
    },
    "NewNetworkName": {
      "type": "string",
      "defaultValue": "[format('{0}-vnet', parameters('Prefix'))]",
      "metadata": {
        "description": "The address space used for the VNet attached to AVS. Must be non-overlapping with existing networks"
      }
    },
    "NewVNetAddressSpace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The address space used for the VNet attached to AVS. Must be non-overlapping with existing networks"
      }
    },
    "NewVnetNewGatewaySubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet CIDR used for the Gateway Subnet. Must be a /24 or greater within the VNetAddressSpace"
      }
    },
    "ExistingNetworkResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Existing Gateway name"
      }
    },
    "ExistingGatewayName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Existing Gateway name"
      }
    },
    "DeployJumpbox": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Should a Jumpbox & Bastion be deployed to access the Private Cloud"
      }
    },
    "JumpboxUsername": {
      "type": "string",
      "defaultValue": "avsjump",
      "metadata": {
        "description": "Username for the Jumpbox VM"
      }
    },
    "JumpboxPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Jumpbox VM, can be changed later"
      }
    },
    "JumpboxSubnet": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet CIDR used for the Jumpbox VM Subnet. Must be a /26 or greater within the VNetAddressSpace"
      }
    },
    "JumpboxSku": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "The sku to use for the Jumpbox VM, must have quota for this within the target region"
      }
    },
    "operatingSystemSKU": {
      "type": "string",
      "defaultValue": "win2019",
      "allowedValues": [
        "win2022",
        "win2019",
        "win11",
        "win11ms",
        "ubuntu2004gen2"
      ],
      "metadata": {
        "description": "Set the OS version to use"
      }
    },
    "HighPerformance": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional: Enable high performance attributes for VM, such as setting Storage to Premium and enabling Accelerated Networking"
      }
    },
    "BootstrapJumpboxVM": {
      "type": "bool",
      "defaultValue": false
    },
    "BootstrapPath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/shaunjacob/AVSLevelUpFY23/master/LevelUp/LZwtihAVS/Bicep/Bootstrap.ps1",
      "metadata": {
        "description": "The path for Jumpbox VM bootstrap PowerShell script file (expecting \"bootstrap.ps1\" file)"
      }
    },
    "BootstrapCommand": {
      "type": "string",
      "defaultValue": "powershell.exe -ExecutionPolicy Unrestricted -File bootstrap.ps1",
      "metadata": {
        "description": "The command to trigger running the bootstrap script. If was not provided, then the expected script file name must be \"bootstrap.ps1\")"
      }
    },
    "BastionSubnet": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet CIDR used for the Bastion Subnet. Must be a /26 or greater within the VNetAddressSpace"
      }
    },
    "MonitoringResourceGroupName": {
      "type": "string",
      "defaultValue": "[format('{0}-Operational', parameters('Prefix'))]"
    },
    "DeployMonitoring": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployDashboard": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployMetricAlerts": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployServiceHealth": {
      "type": "bool",
      "defaultValue": false
    },
    "AlertEmails": {
      "type": "string",
      "defaultValue": ""
    },
    "CPUUsageThreshold": {
      "type": "int",
      "defaultValue": 60
    },
    "MemoryUsageThreshold": {
      "type": "int",
      "defaultValue": 60
    },
    "StorageUsageThreshold": {
      "type": "int",
      "defaultValue": 60
    },
    "LoggingResourceGroupName": {
      "type": "string",
      "defaultValue": "[format('{0}-Operational', parameters('Prefix'))]"
    },
    "DeployDiagnostics": {
      "type": "bool",
      "defaultValue": false
    },
    "EnableAVSLogsWorkspaceSetting": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployActivityLogDiagnostics": {
      "type": "bool",
      "defaultValue": false
    },
    "EnableAVSLogsStorageSetting": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployWorkbook": {
      "type": "bool",
      "defaultValue": false
    },
    "DeployWorkspace": {
      "type": "bool",
      "defaultValue": false
    },
    "NewWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('{0}-log', parameters('Prefix'))]"
    },
    "NewStorageAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "DeployStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "ExistingWorkspaceId": {
      "type": "string",
      "defaultValue": ""
    },
    "ExistingStorageAccountId": {
      "type": "string",
      "defaultValue": ""
    },
    "DeployHCX": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Should HCX be deployed as part of the deployment"
      }
    },
    "DeploySRM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Should SRM be deployed as part of the deployment"
      }
    },
    "SRMLicenseKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "License key to be used if SRM is deployed"
      }
    },
    "VRServerCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of vSphere Replication Servers to be created if SRM is deployed"
      }
    },
    "TelemetryOptOut": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Opt-out of deployment telemetry"
      }
    },
    "utc": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "avsUseCustomNaming": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. AVS resources custom naming. (Default: false)"
      }
    },
    "time": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "Optional. AVS resources custom tagging. (Default: false)"
      }
    },
    "timeShort": {
      "type": "string",
      "defaultValue": "[utcNow('d')]"
    },
    "avsUseCustomTagging": {
      "type": "bool",
      "defaultValue": false
    },
    "environmentTag": {
      "type": "string",
      "defaultValue": ""
    },
    "departmentTag": {
      "type": "string",
      "defaultValue": ""
    },
    "ownerTag": {
      "type": "string",
      "defaultValue": ""
    },
    "costCenterTag": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "deploymentPrefix": "[format('AVS-{0}', uniqueString(deployment().name, parameters('Location')))]",
    "varCuaid": "1cf4a3e3-529c-4fb2-ba6a-63dff7d71586",
    "PrefixLowercase": "[toLower(parameters('Prefix'))]",
    "uniquestorageaccountname": "[format('{0}{1}', variables('PrefixLowercase'), uniqueString(parameters('utc')))]",
    "customPrivateCloudResourceGroupName": "[if(parameters('avsUseCustomNaming'), parameters('PrivateCloudResourceGroupName'), format('{0}-PrivateCloud', parameters('Prefix')))]",
    "customSDDCName": "[if(parameters('avsUseCustomNaming'), parameters('PrivateCloudName'), format('{0}-sddc', parameters('Prefix')))]",
    "customNetworkResourceGroupName": "[if(parameters('avsUseCustomNaming'), parameters('NewNetworkResourceGroupName'), format('{0}-Network', parameters('Prefix')))]",
    "customNetworkName": "[if(parameters('avsUseCustomNaming'), parameters('NewNetworkName'), format('{0}-vnet', parameters('Prefix')))]",
    "customMonitoringResourceGroupName": "[if(parameters('avsUseCustomNaming'), parameters('MonitoringResourceGroupName'), format('{0}-Operational', parameters('Prefix')))]",
    "customLoggingResourceGroupName": "[if(parameters('avsUseCustomNaming'), parameters('LoggingResourceGroupName'), format('{0}-Operational', parameters('Prefix')))]",
    "customWorkspaceName": "[if(parameters('avsUseCustomNaming'), parameters('NewWorkspaceName'), format('{0}-log', parameters('Prefix')))]",
    "customStorageAccountName": "[if(parameters('avsUseCustomNaming'), parameters('NewStorageAccountName'), variables('uniquestorageaccountname'))]",
    "varAVSDefaultTags": {
      "ServiceWorkload": "AVS",
      "CreationTimeUTC": "[parameters('time')]",
      "CreationTimeUTCShort": "[parameters('timeShort')]"
    },
    "varCustomResourceTags": "[if(parameters('avsUseCustomTagging'), createObject('Environment', parameters('environmentTag'), 'Department', parameters('departmentTag'), 'Owner', parameters('ownerTag'), 'CostCenter', parameters('costCenterTag')), createObject())]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-AVS', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Prefix": {
            "value": "[parameters('Prefix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "PrivateCloudName": {
            "value": "[variables('customSDDCName')]"
          },
          "PrivateCloudResourceGroupName": {
            "value": "[variables('customPrivateCloudResourceGroupName')]"
          },
          "PrivateCloudAddressSpace": {
            "value": "[parameters('PrivateCloudAddressSpace')]"
          },
          "PrivateCloudHostCount": {
            "value": "[parameters('PrivateCloudHostCount')]"
          },
          "PrivateCloudSKU": {
            "value": "[parameters('PrivateCloudSKU')]"
          },
          "DeployPrivateCloud": {
            "value": "[parameters('DeployPrivateCloud')]"
          },
          "ExistingPrivateCloudResourceId": {
            "value": "[parameters('ExistingPrivateCloudResourceId')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "8514603870887010528"
            }
          },
          "parameters": {
            "Prefix": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "PrivateCloudAddressSpace": {
              "type": "string"
            },
            "PrivateCloudName": {
              "type": "string"
            },
            "PrivateCloudResourceGroupName": {
              "type": "string",
              "defaultValue": "avs-rg"
            },
            "PrivateCloudSKU": {
              "type": "string"
            },
            "PrivateCloudHostCount": {
              "type": "int"
            },
            "DeployPrivateCloud": {
              "type": "bool"
            },
            "ExistingPrivateCloudResourceId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "condition": "[parameters('DeployPrivateCloud')]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('PrivateCloudResourceGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[parameters('DeployPrivateCloud')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-PrivateCloud', deployment().name)]",
              "resourceGroup": "[parameters('PrivateCloudResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "NetworkBlock": {
                    "value": "[parameters('PrivateCloudAddressSpace')]"
                  },
                  "SKUName": {
                    "value": "[parameters('PrivateCloudSKU')]"
                  },
                  "ManagementClusterSize": {
                    "value": "[parameters('PrivateCloudHostCount')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "9309159906237048806"
                    }
                  },
                  "parameters": {
                    "Prefix": {
                      "type": "string"
                    },
                    "PrivateCloudName": {
                      "type": "string",
                      "defaultValue": "[format('{0}-SDDC', parameters('Prefix'))]"
                    },
                    "NetworkBlock": {
                      "type": "string"
                    },
                    "ManagementClusterSize": {
                      "type": "int"
                    },
                    "SKUName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AVS/privateClouds",
                      "apiVersion": "2021-12-01",
                      "name": "[parameters('PrivateCloudName')]",
                      "sku": {
                        "name": "[parameters('SKUName')]"
                      },
                      "location": "[parameters('Location')]",
                      "properties": {
                        "networkBlock": "[parameters('NetworkBlock')]",
                        "internet": "Disabled",
                        "managementCluster": {
                          "clusterSize": "[parameters('ManagementClusterSize')]"
                        }
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "PrivateCloudName": {
                      "type": "string",
                      "value": "[parameters('PrivateCloudName')]"
                    },
                    "PrivateCloudResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.AVS/privateClouds', parameters('PrivateCloudName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('PrivateCloudResourceGroupName'))]"
              ]
            }
          ],
          "outputs": {
            "PrivateCloudName": {
              "type": "string",
              "value": "[if(parameters('DeployPrivateCloud'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-PrivateCloud', deployment().name)), '2022-09-01').outputs.PrivateCloudName.value, '')]"
            },
            "PrivateCloudResourceGroupName": {
              "type": "string",
              "value": "[if(parameters('DeployPrivateCloud'), parameters('PrivateCloudResourceGroupName'), split(parameters('ExistingPrivateCloudResourceId'), '/')[4])]"
            },
            "PrivateCloudResourceId": {
              "type": "string",
              "value": "[if(parameters('DeployPrivateCloud'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-PrivateCloud', deployment().name)), '2022-09-01').outputs.PrivateCloudResourceId.value, '')]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('DeployNetworking')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-AzureNetworking', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Prefix": {
            "value": "[parameters('Prefix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "VNetExists": {
            "value": "[parameters('VNetExists')]"
          },
          "NewNetworkName": {
            "value": "[variables('customNetworkName')]"
          },
          "NewNetworkResourceGroupName": {
            "value": "[variables('customNetworkResourceGroupName')]"
          },
          "ExistingNetworkResourceId": {
            "value": "[parameters('ExistingNetworkResourceId')]"
          },
          "ExistingGatewayName": {
            "value": "[parameters('ExistingGatewayName')]"
          },
          "NewVNetAddressSpace": {
            "value": "[parameters('NewVNetAddressSpace')]"
          },
          "NewVnetNewGatewaySubnetAddressPrefix": {
            "value": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "8817063218673557070"
            }
          },
          "parameters": {
            "Location": {
              "type": "string",
              "defaultValue": "southeastasia"
            },
            "Prefix": {
              "type": "string",
              "defaultValue": "SJTEST1"
            },
            "VNetExists": {
              "type": "bool",
              "defaultValue": true
            },
            "NewNetworkResourceGroupName": {
              "type": "string",
              "defaultValue": "SJTESTNET1"
            },
            "NewNetworkName": {
              "type": "string",
              "defaultValue": "SJTESTNET1-vnet"
            },
            "NewVNetAddressSpace": {
              "type": "string",
              "defaultValue": "10.111.0.0/16"
            },
            "NewVnetNewGatewaySubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.111.0.0/24"
            },
            "ExistingNetworkResourceId": {
              "type": "string",
              "defaultValue": "/subscriptions/1caa5ab4-523f-4851-952b-1b689c48fae9/resourceGroups/AVS-SEA-Network/providers/Microsoft.Network/virtualNetworks/AVS-SEA-vnet"
            },
            "ExistingGatewayName": {
              "type": "string",
              "defaultValue": "AVS-SEA-gw"
            },
            "tags": {
              "type": "object"
            }
          },
          "variables": {
            "ExistingNetworkResourceGroupName": "[split(parameters('ExistingNetworkResourceId'), '/')[4]]"
          },
          "resources": [
            {
              "condition": "[not(parameters('VNetExists'))]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('NewNetworkResourceGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[not(parameters('VNetExists'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-NewNetwork', deployment().name)]",
              "resourceGroup": "[parameters('NewNetworkResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "NewNetworkName": {
                    "value": "[parameters('NewNetworkName')]"
                  },
                  "NewVNetAddressSpace": {
                    "value": "[parameters('NewVNetAddressSpace')]"
                  },
                  "NewVnetNewGatewaySubnetAddressPrefix": {
                    "value": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "17158836313627762431"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "Prefix": {
                      "type": "string"
                    },
                    "NewVNetAddressSpace": {
                      "type": "string"
                    },
                    "NewVnetNewGatewaySubnetAddressPrefix": {
                      "type": "string"
                    },
                    "NewGatewaySku": {
                      "type": "string",
                      "defaultValue": "Standard"
                    },
                    "NewNetworkName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "NewVnetNewGatewayName": "[format('{0}-vgw', parameters('Prefix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('NewNetworkName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('NewVNetAddressSpace')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "GatewaySubnet",
                            "properties": {
                              "addressPrefix": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-08-01",
                      "name": "[format('{0}-pip', variables('NewVnetNewGatewayName'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[variables('NewVnetNewGatewayName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "gatewayType": "ExpressRoute",
                        "sku": {
                          "name": "[parameters('NewGatewaySku')]",
                          "tier": "[parameters('NewGatewaySku')]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "default",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('NewNetworkName')), '2021-02-01').subnets[0].id]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tags')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]",
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('NewNetworkName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "VNetName": {
                      "type": "string",
                      "value": "[parameters('NewNetworkName')]"
                    },
                    "GatewayName": {
                      "type": "string",
                      "value": "[variables('NewVnetNewGatewayName')]"
                    },
                    "VNetResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('NewNetworkName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('NewNetworkResourceGroupName'))]"
              ]
            }
          ],
          "outputs": {
            "GatewayName": {
              "type": "string",
              "value": "[if(not(parameters('VNetExists')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('NewNetworkResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-NewNetwork', deployment().name)), '2022-09-01').outputs.GatewayName.value, parameters('ExistingGatewayName'))]"
            },
            "VNetName": {
              "type": "string",
              "value": "[if(not(parameters('VNetExists')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('NewNetworkResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-NewNetwork', deployment().name)), '2022-09-01').outputs.VNetName.value, 'none')]"
            },
            "VNetResourceId": {
              "type": "string",
              "value": "[if(not(parameters('VNetExists')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('NewNetworkResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-NewNetwork', deployment().name)), '2022-09-01').outputs.VNetResourceId.value, 'none')]"
            },
            "NetworkResourceGroup": {
              "type": "string",
              "value": "[if(not(parameters('VNetExists')), parameters('NewNetworkResourceGroupName'), variables('ExistingNetworkResourceGroupName'))]"
            },
            "NetworkResourceGroupLocation": {
              "type": "string",
              "value": "[if(not(parameters('VNetExists')), reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('NewNetworkResourceGroupName')), '2021-04-01', 'full').location, 'none')]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('DeployNetworking')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-VNetConnection', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "GatewayName": "[if(parameters('DeployNetworking'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix'))), '2022-09-01').outputs.GatewayName.value), createObject('value', 'none'))]",
          "NetworkResourceGroup": "[if(parameters('DeployNetworking'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix'))), '2022-09-01').outputs.NetworkResourceGroup.value), createObject('value', 'none'))]",
          "VNetPrefix": {
            "value": "[parameters('Prefix')]"
          },
          "PrivateCloudName": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudName.value), createObject('value', parameters('ExistingPrivateCloudName')))]",
          "PrivateCloudResourceGroup": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudResourceGroupName.value]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "12240664398650598192"
            }
          },
          "parameters": {
            "VNetPrefix": {
              "type": "string"
            },
            "AVSPrefix": {
              "type": "string",
              "defaultValue": "[parameters('VNetPrefix')]"
            },
            "PrivateCloudResourceGroup": {
              "type": "string"
            },
            "PrivateCloudName": {
              "type": "string"
            },
            "NetworkResourceGroup": {
              "type": "string"
            },
            "GatewayName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-ExRAuth', deployment().name)]",
              "resourceGroup": "[parameters('PrivateCloudResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ConnectionName": {
                    "value": "[format('{0}-VNet', parameters('VNetPrefix'))]"
                  },
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "12730407191150352598"
                    }
                  },
                  "parameters": {
                    "PrivateCloudName": {
                      "type": "string"
                    },
                    "ConnectionName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AVS/privateClouds/authorizations",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('PrivateCloudName'), parameters('ConnectionName'))]"
                    }
                  ],
                  "outputs": {
                    "ExpressRouteAuthorizationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.AVS/privateClouds/authorizations', parameters('PrivateCloudName'), parameters('ConnectionName')), '2021-06-01').expressRouteAuthorizationKey]"
                    },
                    "ExpressRouteId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.AVS/privateClouds', parameters('PrivateCloudName')), '2021-06-01').circuit.expressRouteID]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-ExR', deployment().name)]",
              "resourceGroup": "[parameters('NetworkResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ConnectionName": {
                    "value": "[format('{0}-AVS', parameters('AVSPrefix'))]"
                  },
                  "GatewayName": {
                    "value": "[parameters('GatewayName')]"
                  },
                  "ExpressRouteAuthorizationKey": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name)), '2022-09-01').outputs.ExpressRouteAuthorizationKey.value]"
                  },
                  "ExpressRouteId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name)), '2022-09-01').outputs.ExpressRouteId.value]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "15154367291961889920"
                    }
                  },
                  "parameters": {
                    "GatewayName": {
                      "type": "string"
                    },
                    "ConnectionName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ExpressRouteAuthorizationKey": {
                      "type": "securestring"
                    },
                    "ExpressRouteId": {
                      "type": "securestring"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('ConnectionName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "connectionType": "ExpressRoute",
                        "routingWeight": 0,
                        "virtualNetworkGateway1": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GatewayName'))]",
                          "properties": {}
                        },
                        "peer": {
                          "id": "[parameters('ExpressRouteId')]"
                        },
                        "authorizationKey": "[parameters('ExpressRouteAuthorizationKey')]"
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "ExRConnectionResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/connections', parameters('ConnectionName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name))]"
              ]
            }
          ],
          "outputs": {
            "ExRConnectionResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('NetworkResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExR', deployment().name)), '2022-09-01').outputs.ExRConnectionResourceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix')))]"
      ]
    },
    {
      "condition": "[parameters('DeployJumpbox')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Jumpbox', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Prefix": {
            "value": "[parameters('Prefix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "Username": {
            "value": "[parameters('JumpboxUsername')]"
          },
          "Password": {
            "value": "[parameters('JumpboxPassword')]"
          },
          "VNetName": "[if(parameters('DeployNetworking'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix'))), '2022-09-01').outputs.VNetName.value), createObject('value', ''))]",
          "VNetResourceGroup": "[if(parameters('DeployNetworking'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix'))), '2022-09-01').outputs.NetworkResourceGroup.value), createObject('value', ''))]",
          "BastionSubnet": {
            "value": "[parameters('BastionSubnet')]"
          },
          "JumpboxSubnet": {
            "value": "[parameters('JumpboxSubnet')]"
          },
          "JumpboxSku": {
            "value": "[parameters('JumpboxSku')]"
          },
          "HighPerformance": {
            "value": "[parameters('HighPerformance')]"
          },
          "operatingSystemSKU": {
            "value": "[parameters('operatingSystemSKU')]"
          },
          "BootstrapJumpboxVM": {
            "value": "[parameters('BootstrapJumpboxVM')]"
          },
          "BootstrapPath": {
            "value": "[parameters('BootstrapPath')]"
          },
          "BootstrapCommand": {
            "value": "[parameters('BootstrapCommand')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "9870245090517610393"
            }
          },
          "parameters": {
            "Prefix": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "Username": {
              "type": "securestring"
            },
            "Password": {
              "type": "securestring"
            },
            "VNetResourceGroup": {
              "type": "string"
            },
            "VNetName": {
              "type": "string"
            },
            "JumpboxSubnet": {
              "type": "string"
            },
            "JumpboxSku": {
              "type": "string"
            },
            "operatingSystemSKU": {
              "type": "string",
              "defaultValue": ""
            },
            "HighPerformance": {
              "type": "bool"
            },
            "BastionSubnet": {
              "type": "string"
            },
            "BootstrapJumpboxVM": {
              "type": "bool",
              "defaultValue": false
            },
            "BootstrapPath": {
              "type": "string"
            },
            "BootstrapCommand": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "Jumpbox-Subnet",
              "resourceGroup": "[parameters('VNetResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "VNetName": {
                    "value": "[parameters('VNetName')]"
                  },
                  "BastionSubnet": {
                    "value": "[parameters('BastionSubnet')]"
                  },
                  "JumpboxSubnet": {
                    "value": "[parameters('JumpboxSubnet')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "3645652890400228238"
                    }
                  },
                  "parameters": {
                    "VNetName": {
                      "type": "string"
                    },
                    "JumpboxSubnet": {
                      "type": "string"
                    },
                    "BastionSubnet": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('VNetName'), 'JumpBox')]",
                      "properties": {
                        "addressPrefix": "[parameters('JumpboxSubnet')]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('VNetName'), 'AzureBastionSubnet')]",
                      "properties": {
                        "addressPrefix": "[parameters('BastionSubnet')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VNetName'), 'JumpBox')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "JumpBoxSubnetId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VNetName'), 'JumpBox')]"
                    },
                    "BastionSubnetId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VNetName'), 'AzureBastionSubnet')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Bastion', deployment().name)]",
              "resourceGroup": "[parameters('VNetResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "SubnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('VNetResourceGroup')), 'Microsoft.Resources/deployments', 'Jumpbox-Subnet'), '2022-09-01').outputs.BastionSubnetId.value]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "11236863394230226742"
                    }
                  },
                  "parameters": {
                    "Prefix": {
                      "type": "string"
                    },
                    "SubnetId": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2020-05-01",
                      "name": "[format('{0}-bastion-pip', parameters('Prefix'))]",
                      "location": "[parameters('Location')]",
                      "sku": {
                        "name": "Standard"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static"
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2020-05-01",
                      "name": "[format('{0}-bastion', parameters('Prefix'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('SubnetId')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-bastion-pip', parameters('Prefix')))]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tags')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-bastion-pip', parameters('Prefix')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('VNetResourceGroup')), 'Microsoft.Resources/deployments', 'Jumpbox-Subnet')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-VM', deployment().name)]",
              "resourceGroup": "[parameters('VNetResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "SubnetId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('VNetResourceGroup')), 'Microsoft.Resources/deployments', 'Jumpbox-Subnet'), '2022-09-01').outputs.JumpBoxSubnetId.value]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "Username": {
                    "value": "[parameters('Username')]"
                  },
                  "Password": {
                    "value": "[parameters('Password')]"
                  },
                  "VMSize": {
                    "value": "[parameters('JumpboxSku')]"
                  },
                  "operatingSystemSKU": {
                    "value": "[parameters('operatingSystemSKU')]"
                  },
                  "HighPerformance": {
                    "value": "[parameters('HighPerformance')]"
                  },
                  "BootstrapVM": {
                    "value": "[parameters('BootstrapJumpboxVM')]"
                  },
                  "BootstrapPath": {
                    "value": "[parameters('BootstrapPath')]"
                  },
                  "BootstrapCommand": {
                    "value": "[parameters('BootstrapCommand')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "4875883795718359009"
                    }
                  },
                  "parameters": {
                    "Prefix": {
                      "type": "string"
                    },
                    "SubnetId": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "Username": {
                      "type": "string"
                    },
                    "Password": {
                      "type": "securestring"
                    },
                    "VMSize": {
                      "type": "string"
                    },
                    "operatingSystemSKU": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "HighPerformance": {
                      "type": "bool"
                    },
                    "BootstrapVM": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "BootstrapPath": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "BootstrapCommand": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "Name": "[format('{0}-jumpbox', parameters('Prefix'))]",
                    "Hostname": "avsjumpbox",
                    "osImageReference": {
                      "win2022": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                      },
                      "win2019": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                      },
                      "win11": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-11",
                        "sku": "win11-21h2-pron",
                        "version": "latest"
                      },
                      "win11ms": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-11",
                        "sku": "win11-21h2-avd",
                        "version": "latest"
                      },
                      "ubuntu2004gen2": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('Name')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('SubnetId')]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('HighPerformance')]"
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-03-01",
                      "name": "[variables('Name')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('VMSize')]"
                        },
                        "osProfile": {
                          "computerName": "[variables('Hostname')]",
                          "adminUsername": "[parameters('Username')]",
                          "adminPassword": "[parameters('Password')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "[variables('osImageReference')[parameters('operatingSystemSKU')].publisher]",
                            "offer": "[variables('osImageReference')[parameters('operatingSystemSKU')].offer]",
                            "sku": "[variables('osImageReference')[parameters('operatingSystemSKU')].sku]",
                            "version": "[variables('osImageReference')[parameters('operatingSystemSKU')].version]"
                          },
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[if(parameters('HighPerformance'), 'Premium_LRS', 'Standard_LRS')]"
                            }
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Name'))]"
                            }
                          ]
                        }
                      },
                      "tags": "[parameters('tags')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('Name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('BootstrapVM')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2015-06-15",
                      "name": "[format('{0}/CustomScriptExtension', variables('Name'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[parameters('BootstrapPath')]"
                          ],
                          "commandToExecute": "[parameters('BootstrapCommand')]"
                        }
                      },
                      "tags": "[parameters('tags')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('Name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "JumpboxResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', variables('Name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('VNetResourceGroup')), 'Microsoft.Resources/deployments', 'Jumpbox-Subnet')]"
              ]
            }
          ],
          "outputs": {
            "JumpboxResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('VNetResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-VM', deployment().name)), '2022-09-01').outputs.JumpboxResourceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AzureNetworking', variables('deploymentPrefix')))]"
      ]
    },
    {
      "condition": "[parameters('DeployMonitoring')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Monitoring', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AlertEmails": {
            "value": "[parameters('AlertEmails')]"
          },
          "Prefix": {
            "value": "[parameters('Prefix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "MonitoringResourceGroupName": {
            "value": "[variables('customMonitoringResourceGroupName')]"
          },
          "DeployMetricAlerts": {
            "value": "[parameters('DeployMetricAlerts')]"
          },
          "DeployServiceHealth": {
            "value": "[parameters('DeployServiceHealth')]"
          },
          "DeployDashboard": {
            "value": "[parameters('DeployDashboard')]"
          },
          "DeployWorkbook": {
            "value": "[parameters('DeployWorkbook')]"
          },
          "PrivateCloudName": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudName.value), createObject('value', parameters('ExistingPrivateCloudName')))]",
          "PrivateCloudResourceId": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudResourceId.value), createObject('value', parameters('ExistingPrivateCloudResourceId')))]",
          "CPUUsageThreshold": {
            "value": "[parameters('CPUUsageThreshold')]"
          },
          "MemoryUsageThreshold": {
            "value": "[parameters('MemoryUsageThreshold')]"
          },
          "StorageUsageThreshold": {
            "value": "[parameters('StorageUsageThreshold')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "6718755585053386856"
            }
          },
          "parameters": {
            "Prefix": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "MonitoringResourceGroupName": {
              "type": "string"
            },
            "AlertEmails": {
              "type": "string"
            },
            "DeployMetricAlerts": {
              "type": "bool"
            },
            "DeployServiceHealth": {
              "type": "bool"
            },
            "DeployDashboard": {
              "type": "bool"
            },
            "DeployWorkbook": {
              "type": "bool"
            },
            "PrivateCloudName": {
              "type": "string"
            },
            "PrivateCloudResourceId": {
              "type": "string"
            },
            "CPUUsageThreshold": {
              "type": "int"
            },
            "MemoryUsageThreshold": {
              "type": "int"
            },
            "StorageUsageThreshold": {
              "type": "int"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('MonitoringResourceGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[or(parameters('DeployMetricAlerts'), parameters('DeployServiceHealth'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-ActionGroup', deployment().name)]",
              "resourceGroup": "[parameters('MonitoringResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "ActionGroupEmails": {
                    "value": "[parameters('AlertEmails')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "59088036161112938"
                    }
                  },
                  "parameters": {
                    "Prefix": {
                      "type": "string"
                    },
                    "ActionGroupEmails": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "microsoft.insights/actionGroups",
                      "apiVersion": "2019-06-01",
                      "name": "[format('{0}-ActionGroup', parameters('Prefix'))]",
                      "location": "Global",
                      "properties": {
                        "enabled": true,
                        "groupShortName": "[substring(format('avs{0}', uniqueString(parameters('Prefix'))), 0, 12)]",
                        "emailReceivers": [
                          {
                            "emailAddress": "[parameters('ActionGroupEmails')]",
                            "name": "[split(parameters('ActionGroupEmails'), '@')[0]]",
                            "useCommonAlertSchema": false
                          }
                        ]
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "ActionGroupResourceId": {
                      "type": "string",
                      "value": "[resourceId('microsoft.insights/actionGroups', format('{0}-ActionGroup', parameters('Prefix')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('MonitoringResourceGroupName'))]"
              ]
            },
            {
              "condition": "[parameters('DeployMetricAlerts')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-MetricAlerts', deployment().name)]",
              "resourceGroup": "[parameters('MonitoringResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ActionGroupResourceId": "[if(or(parameters('DeployMetricAlerts'), parameters('DeployServiceHealth')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('MonitoringResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-ActionGroup', deployment().name)), '2022-09-01').outputs.ActionGroupResourceId.value), createObject('value', ''))]",
                  "AlertPrefix": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "PrivateCloudResourceId": {
                    "value": "[parameters('PrivateCloudResourceId')]"
                  },
                  "CPUUsageThreshold": {
                    "value": "[parameters('CPUUsageThreshold')]"
                  },
                  "MemoryUsageThreshold": {
                    "value": "[parameters('MemoryUsageThreshold')]"
                  },
                  "StorageUsageThreshold": {
                    "value": "[parameters('StorageUsageThreshold')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "12682990044758436021"
                    }
                  },
                  "parameters": {
                    "AlertPrefix": {
                      "type": "string"
                    },
                    "ActionGroupResourceId": {
                      "type": "string"
                    },
                    "PrivateCloudResourceId": {
                      "type": "string"
                    },
                    "CPUUsageThreshold": {
                      "type": "int"
                    },
                    "MemoryUsageThreshold": {
                      "type": "int"
                    },
                    "StorageUsageThreshold": {
                      "type": "int"
                    },
                    "CPUCriticalThreshold": {
                      "type": "int",
                      "defaultValue": 80
                    },
                    "MemoryCriticalThreshold": {
                      "type": "int",
                      "defaultValue": 80
                    },
                    "StorageCriticalThreshold": {
                      "type": "int",
                      "defaultValue": 75
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "Alerts": [
                      {
                        "Name": "CPU",
                        "Description": "CPU Usage per Cluster",
                        "Metric": "EffectiveCpuAverage",
                        "SplitDimension": "clustername",
                        "Threshold": "[parameters('CPUUsageThreshold')]",
                        "Severity": 2
                      },
                      {
                        "Name": "Memory",
                        "Description": "Memory Usage per Cluster",
                        "Metric": "UsageAverage",
                        "SplitDimension": "clustername",
                        "Threshold": "[parameters('MemoryUsageThreshold')]",
                        "Severity": 2
                      },
                      {
                        "Name": "Storage",
                        "Description": "Storage Usage per Datastore",
                        "Metric": "DiskUsedPercentage",
                        "SplitDimension": "dsname",
                        "Threshold": "[parameters('StorageUsageThreshold')]",
                        "Severity": 2
                      },
                      {
                        "Name": "CPUCritical",
                        "Description": "CPU Critical Usage per Cluster",
                        "Metric": "EffectiveCpuAverage",
                        "SplitDimension": "clustername",
                        "Threshold": "[parameters('CPUCriticalThreshold')]",
                        "Severity": 0
                      },
                      {
                        "Name": "MemoryCritical",
                        "Description": "Memory Critical Usage per Cluster",
                        "Metric": "UsageAverage",
                        "SplitDimension": "clustername",
                        "Threshold": "[parameters('MemoryCriticalThreshold')]",
                        "Severity": 0
                      },
                      {
                        "Name": "StorageCritical",
                        "Description": "Storage Critical Usage per Datastore",
                        "Metric": "DiskUsedPercentage",
                        "SplitDimension": "dsname",
                        "Threshold": "[parameters('StorageCriticalThreshold')]",
                        "Severity": 0
                      }
                    ]
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "MetricAlert",
                        "count": "[length(variables('Alerts'))]"
                      },
                      "type": "Microsoft.Insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "[format('{0}-{1}', parameters('AlertPrefix'), variables('Alerts')[copyIndex()].Name)]",
                      "location": "Global",
                      "properties": {
                        "description": "[variables('Alerts')[copyIndex()].Description]",
                        "criteria": {
                          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                          "allOf": [
                            {
                              "name": "Metric1",
                              "operator": "GreaterThan",
                              "threshold": "[variables('Alerts')[copyIndex()].Threshold]",
                              "timeAggregation": "Average",
                              "criterionType": "StaticThresholdCriterion",
                              "metricName": "[variables('Alerts')[copyIndex()].Metric]",
                              "dimensions": [
                                {
                                  "name": "[variables('Alerts')[copyIndex()].SplitDimension]",
                                  "operator": "Include",
                                  "values": [
                                    "*"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "scopes": [
                          "[parameters('PrivateCloudResourceId')]"
                        ],
                        "severity": "[variables('Alerts')[copyIndex()].Severity]",
                        "evaluationFrequency": "PT5M",
                        "windowSize": "PT30M",
                        "autoMitigate": true,
                        "enabled": true,
                        "actions": [
                          {
                            "actionGroupId": "[parameters('ActionGroupResourceId')]"
                          }
                        ]
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('MonitoringResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-ActionGroup', deployment().name))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('MonitoringResourceGroupName'))]"
              ]
            },
            {
              "condition": "[parameters('DeployServiceHealth')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-ServiceHealth', deployment().name)]",
              "resourceGroup": "[parameters('MonitoringResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ActionGroupResourceId": "[if(or(parameters('DeployMetricAlerts'), parameters('DeployServiceHealth')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('MonitoringResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-ActionGroup', deployment().name)), '2022-09-01').outputs.ActionGroupResourceId.value), createObject('value', ''))]",
                  "AlertPrefix": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "PrivateCloudResourceId": {
                    "value": "[parameters('PrivateCloudResourceId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "12961085672295186283"
                    }
                  },
                  "parameters": {
                    "AlertPrefix": {
                      "type": "string"
                    },
                    "ActionGroupResourceId": {
                      "type": "string"
                    },
                    "PrivateCloudResourceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/activityLogAlerts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-ServiceHealth', parameters('AlertPrefix'))]",
                      "location": "Global",
                      "properties": {
                        "description": "Service Health Alerts",
                        "condition": {
                          "allOf": [
                            {
                              "field": "category",
                              "equals": "ServiceHealth"
                            },
                            {
                              "field": "properties.impactedServices[*].ServiceName",
                              "containsAny": [
                                "Azure VMware Solution"
                              ]
                            },
                            {
                              "field": "properties.impactedServices[*].ImpactedRegions[*].RegionName",
                              "containsAny": [
                                "[reference(parameters('PrivateCloudResourceId'), '2021-06-01', 'Full').location]",
                                "Global"
                              ]
                            }
                          ]
                        },
                        "scopes": [
                          "[subscription().id]"
                        ],
                        "enabled": true,
                        "actions": {
                          "actionGroups": [
                            {
                              "actionGroupId": "[parameters('ActionGroupResourceId')]"
                            }
                          ]
                        }
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('MonitoringResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-ActionGroup', deployment().name))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('MonitoringResourceGroupName'))]"
              ]
            },
            {
              "condition": "[parameters('DeployDashboard')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Dashboard', deployment().name)]",
              "resourceGroup": "[parameters('MonitoringResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "PrivateCloudResourceId": {
                    "value": "[parameters('PrivateCloudResourceId')]"
                  },
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "17368684049664092558"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "PrivateCloudName": {
                      "type": "string"
                    },
                    "PrivateCloudResourceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "DashboardHeading": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 1,
                        "x": 0,
                        "y": 0
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/MarkdownPart",
                        "inputs": [],
                        "settings": {
                          "content": {
                            "settings": {
                              "content": "# AVS Private Cloud Metrics",
                              "title": "",
                              "subtitle": "",
                              "markdownSource": 1
                            }
                          }
                        }
                      }
                    },
                    "PrivateCloudLink": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 1,
                        "x": 6,
                        "y": 0
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/ResourcePart",
                        "asset": {
                          "idInputName": "id"
                        },
                        "inputs": [
                          {
                            "name": "id",
                            "value": "[parameters('PrivateCloudResourceId')]"
                          }
                        ]
                      }
                    },
                    "PrivateCloudCPUMetric": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 4,
                        "x": 0,
                        "y": 1
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                        "inputs": [
                          {
                            "name": "options",
                            "value": {
                              "chart": {
                                "metrics": [
                                  {
                                    "resourceMetadata": {
                                      "id": "[parameters('PrivateCloudResourceId')]"
                                    },
                                    "name": "EffectiveCpuAverage",
                                    "aggregationType": 4,
                                    "namespace": "microsoft.avs/privateclouds",
                                    "metricVisualization": {
                                      "displayName": "Percentage CPU"
                                    }
                                  }
                                ],
                                "title": "Percentage CPU by Cluster Name",
                                "titleKind": 1,
                                "visualization": {
                                  "chartType": 2,
                                  "legendVisualization": {
                                    "isVisible": true,
                                    "position": 2,
                                    "hideSubtitle": false
                                  },
                                  "axisVisualization": {
                                    "x": {
                                      "isVisible": true,
                                      "axisType": 2
                                    },
                                    "y": {
                                      "isVisible": true,
                                      "axisType": 1
                                    }
                                  }
                                },
                                "grouping": {
                                  "dimension": "clustername",
                                  "sort": 2,
                                  "top": 10
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "PrivateCloudDiskMetric": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 4,
                        "x": 0,
                        "y": 5
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                        "inputs": [
                          {
                            "name": "options",
                            "value": {
                              "chart": {
                                "metrics": [
                                  {
                                    "resourceMetadata": {
                                      "id": "[parameters('PrivateCloudResourceId')]"
                                    },
                                    "name": "DiskUsedPercentage",
                                    "aggregationType": 4,
                                    "namespace": "microsoft.avs/privateclouds",
                                    "metricVisualization": {
                                      "displayName": " Percentage Datastore Disk Used"
                                    }
                                  }
                                ],
                                "title": "Percentage Datastore Disk Used by Datastore",
                                "titleKind": 1,
                                "visualization": {
                                  "chartType": 2,
                                  "legendVisualization": {
                                    "isVisible": true,
                                    "position": 2,
                                    "hideSubtitle": false
                                  },
                                  "axisVisualization": {
                                    "x": {
                                      "isVisible": true,
                                      "axisType": 2
                                    },
                                    "y": {
                                      "isVisible": true,
                                      "axisType": 1
                                    }
                                  }
                                },
                                "grouping": {
                                  "dimension": "dsname",
                                  "sort": 2,
                                  "top": 10
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "PrivateCloudMemoryMetric": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 4,
                        "x": 6,
                        "y": 1
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                        "inputs": [
                          {
                            "name": "options",
                            "value": {
                              "chart": {
                                "metrics": [
                                  {
                                    "resourceMetadata": {
                                      "id": "[parameters('PrivateCloudResourceId')]"
                                    },
                                    "name": "UsageAverage",
                                    "aggregationType": 4,
                                    "namespace": "microsoft.avs/privateclouds",
                                    "metricVisualization": {
                                      "displayName": "Average Memory Usage"
                                    }
                                  }
                                ],
                                "title": "Average Memory Usage by Cluster Name",
                                "titleKind": 1,
                                "visualization": {
                                  "chartType": 2,
                                  "legendVisualization": {
                                    "isVisible": true,
                                    "position": 2,
                                    "hideSubtitle": false
                                  },
                                  "axisVisualization": {
                                    "x": {
                                      "isVisible": true,
                                      "axisType": 2
                                    },
                                    "y": {
                                      "isVisible": true,
                                      "axisType": 1
                                    }
                                  }
                                },
                                "grouping": {
                                  "dimension": "clustername",
                                  "sort": 2,
                                  "top": 10
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "PrivateCloudDiskUsedMetric": {
                      "position": {
                        "colSpan": 6,
                        "rowSpan": 4,
                        "x": 6,
                        "y": 5
                      },
                      "metadata": {
                        "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                        "inputs": [
                          {
                            "name": "options",
                            "value": {
                              "chart": {
                                "metrics": [
                                  {
                                    "resourceMetadata": {
                                      "id": "[parameters('PrivateCloudResourceId')]"
                                    },
                                    "name": "UsedLatest",
                                    "aggregationType": 4,
                                    "namespace": "microsoft.avs/privateclouds",
                                    "metricVisualization": {
                                      "displayName": "Datastore Disk Used"
                                    }
                                  }
                                ],
                                "title": "Private Cloud Avg Datastore Disk Used",
                                "titleKind": 1,
                                "visualization": {
                                  "chartType": 2,
                                  "legendVisualization": {
                                    "isVisible": true,
                                    "position": 2,
                                    "hideSubtitle": false
                                  },
                                  "axisVisualization": {
                                    "x": {
                                      "isVisible": true,
                                      "axisType": 2
                                    },
                                    "y": {
                                      "isVisible": true,
                                      "axisType": 1
                                    }
                                  }
                                },
                                "grouping": {
                                  "dimension": "dsname",
                                  "sort": 2,
                                  "top": 10
                                },
                                "timespan": {
                                  "relative": {
                                    "duration": 86400000
                                  },
                                  "showUTCTime": false,
                                  "grain": 1
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Portal/dashboards",
                      "apiVersion": "2019-01-01-preview",
                      "name": "[format('{0}-Dashboard', parameters('PrivateCloudName'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "lenses": {
                          "0": {
                            "order": 0,
                            "parts": {
                              "0": "[variables('DashboardHeading')]",
                              "1": "[variables('PrivateCloudLink')]",
                              "2": "[variables('PrivateCloudCPUMetric')]",
                              "3": "[variables('PrivateCloudMemoryMetric')]",
                              "4": "[variables('PrivateCloudDiskMetric')]",
                              "5": "[variables('PrivateCloudDiskUsedMetric')]"
                            }
                          }
                        }
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('MonitoringResourceGroupName'))]"
              ]
            },
            {
              "condition": "[parameters('DeployWorkbook')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Workbook', deployment().name)]",
              "resourceGroup": "[parameters('MonitoringResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "8393262929371861905"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "Prefix": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "workbookId": {
                      "type": "string",
                      "defaultValue": "[newGuid()]",
                      "metadata": {
                        "description": "The unique guid for this workbook instance"
                      }
                    }
                  },
                  "variables": {
                    "WorkbookDisplayName": "[format('{0}-Workbook-v10-{1}', parameters('Prefix'), uniqueString(deployment().name, parameters('Location')))]",
                    "workbookContent": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "crossComponentResources": [
                              "{Workspace}"
                            ],
                            "parameters": [
                              {
                                "id": "0e322c64-be41-4f52-ba5b-df55cf94e41d",
                                "version": "KqlParameterItem/1.0",
                                "name": "TimeRange",
                                "type": 4,
                                "isRequired": true,
                                "value": {
                                  "durationMs": 14400000
                                },
                                "typeSettings": {
                                  "selectableValues": [
                                    {
                                      "durationMs": 3600000
                                    },
                                    {
                                      "durationMs": 14400000
                                    },
                                    {
                                      "durationMs": 43200000
                                    },
                                    {
                                      "durationMs": 86400000
                                    },
                                    {
                                      "durationMs": 172800000
                                    },
                                    {
                                      "durationMs": 259200000
                                    },
                                    {
                                      "durationMs": 604800000
                                    },
                                    {
                                      "durationMs": 1209600000
                                    },
                                    {
                                      "durationMs": 2592000000
                                    },
                                    {
                                      "durationMs": 5184000000
                                    },
                                    {
                                      "durationMs": 7776000000
                                    }
                                  ],
                                  "allowCustom": true
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                }
                              },
                              {
                                "id": "69be2f0e-ec9f-4cb2-bef0-e437c0b01789",
                                "version": "KqlParameterItem/1.0",
                                "name": "Subscription",
                                "type": 6,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "where type =~ 'microsoft.avs/privateclouds'\r\n| summarize Count = count() by subscriptionId\r\n\t| order by Count desc\r\n\t| extend Rank = row_number()\r\n\t| project value = subscriptionId, label = subscriptionId, selected = Rank == 1",
                                "crossComponentResources": [
                                  "value::all"
                                ],
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::1",
                                    "value::all"
                                  ],
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources",
                                "value": [
                                  "value::all"
                                ]
                              },
                              {
                                "id": "569baca3-cd50-4a2c-a701-423682ee14fb",
                                "version": "KqlParameterItem/1.0",
                                "name": "Workspace",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                                "crossComponentResources": [
                                  "{Subscription}"
                                ],
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources",
                                "value": [
                                  "value::all"
                                ]
                              },
                              {
                                "id": "74094954-a20f-4f95-bf23-5d1d232a5af5",
                                "version": "KqlParameterItem/1.0",
                                "name": "AVSInstance",
                                "label": "AVS Instance",
                                "type": 2,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "resources \r\n| where type contains 'microsoft.avs/privatecloud'\r\n| project value = id, label = name",
                                "crossComponentResources": [
                                  "{Subscription}"
                                ],
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::1",
                                    "value::all"
                                  ],
                                  "showDefault": false
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources",
                                "value": [
                                  "value::all"
                                ]
                              },
                              {
                                "id": "85d960b8-e89c-42ee-bf8c-fa95ce925c5d",
                                "version": "KqlParameterItem/1.0",
                                "name": "ChangeLog",
                                "label": "Change Log",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n { \"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]",
                                "timeContext": {
                                  "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "name": "parameters - 0"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# This workbook shows information relevant to deployed Azure VMware Solutions"
                          },
                          "name": "text - 4"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# Change Log\r\n\r\n### Version 1\r\nThis is the original version of the AVS workbooks and features:\r\n- A summary of the AVS soltuons deployed\r\n- Metrics performance view\r\n- Activity section related to AVS\r\n\r\n### Version 2\r\nAdded VMware resource view\r\n\r\n### Version 3 \r\nAdded VM Information \r\n\r\n### Version 4\r\nAdded Alert information\r\n\r\n### Version 5\r\nAdded help for configuring Alerts\r\n\r\n### Version 6\r\n- Added Advisor recommendations\r\n- Added impact filter for Advisor recommendations\r\n- Added status VM tools\r\n\r\n### Version 7\r\nAdded help for Activity tab view\r\n\r\n### Version 8\r\n- Added syslog information\r\n- Enabled more info layout  for syslog\r\n- Presented workspace parameter in general as visible instead of hidden\r\n\r\n### Version 9\r\nAdded map location view including filter for AVS instace and VM views\r\n\r\n### Version 10\r\n- Added AVS quota map and information\r\n- Added additional paramater to filter AVS instance at root level for summary and locations views\r\n- Added vCenter filter to VM view\r\n- Bugfixes and performance enhancements"
                          },
                          "conditionalVisibility": {
                            "parameterName": "ChangeLog",
                            "comparison": "isEqualTo",
                            "value": "Yes"
                          },
                          "name": "text - 5"
                        },
                        {
                          "type": 11,
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "ce43bd96-a673-4b26-a580-023b0ff3ba86",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Summary",
                                "subTarget": "Summary",
                                "style": "link"
                              },
                              {
                                "id": "22d35b15-a48c-4b5f-b450-af89b26ae824",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Resources",
                                "subTarget": "Resources",
                                "style": "link"
                              },
                              {
                                "id": "1ee7d9cd-7d81-4425-baf5-c5d41492b2b7",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Virtual Machines",
                                "subTarget": "VM",
                                "style": "link"
                              },
                              {
                                "id": "0a60794e-c6ef-4cbc-91db-cb2dca983938",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Alerts",
                                "subTarget": "Alerts",
                                "style": "link"
                              },
                              {
                                "id": "2fdb4cac-6ce8-4481-867a-cfe4e50e1ed7",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "SysLog",
                                "subTarget": "SysLog",
                                "style": "link"
                              },
                              {
                                "id": "6fbc03e5-8cc5-45e9-bd24-c3126b51c1e4",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Advisor Recommendations",
                                "subTarget": "Advisor",
                                "style": "link"
                              },
                              {
                                "id": "a33b5afe-5513-447e-98a5-3f67a3704ee1",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Activity",
                                "subTarget": "Activity",
                                "style": "link"
                              },
                              {
                                "id": "2d83b1b4-8a5f-4292-affc-8676c1d1b73e",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "AVS Locations",
                                "subTarget": "Location",
                                "style": "link"
                              },
                              {
                                "id": "566405da-0058-405d-acc7-aac003be1f88",
                                "cellValue": "Tab",
                                "linkTarget": "parameter",
                                "linkLabel": "Quota Information",
                                "subTarget": "Quota",
                                "style": "link"
                              }
                            ]
                          },
                          "name": "links - 3"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources \r\n| where type contains 'microsoft.avs/privatecloud'\r\n| where id in ({AVSInstance})\r\n| extend SKU1 = tostring(sku.name)\r\n| extend endpoints = properties.endpoints\r\n| extend availability = tostring(properties.availability.strategy)\r\n| extend clustersize = tostring(properties.managementCluster.clusterSize)\r\n| extend hosts = properties.managementCluster.hosts\r\n//| mv-expand hosts\r\n| extend expressRouteID = tostring(properties.circuit.expressRouteID)\r\n| project id, hosts,location, SKU1, clustersize, availability, expressRouteID,name //endpoints",
                                  "size": 1,
                                  "title": "AVS Summary",
                                  "exportedParameters": [
                                    {
                                      "fieldName": "name",
                                      "parameterName": "Name"
                                    },
                                    {
                                      "fieldName": "rg",
                                      "parameterName": "rg",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "sub",
                                      "parameterName": "sub",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "id",
                                      "parameterName": "RID",
                                      "parameterType": 1
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "hosts",
                                        "formatter": 0,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "42ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "location",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Sev4",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 5,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "18ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "rg",
                                        "formatter": 5
                                      }
                                    ],
                                    "filter": true,
                                    "labelSettings": [
                                      {
                                        "columnId": "id",
                                        "label": "Name"
                                      },
                                      {
                                        "columnId": "hosts",
                                        "label": "Hosts"
                                      },
                                      {
                                        "columnId": "location",
                                        "label": "Location"
                                      },
                                      {
                                        "columnId": "SKU1",
                                        "label": "SKU"
                                      },
                                      {
                                        "columnId": "clustersize",
                                        "label": "Size"
                                      },
                                      {
                                        "columnId": "availability",
                                        "label": "Availability Strategy"
                                      },
                                      {
                                        "columnId": "expressRouteID",
                                        "label": "ExpressRoute"
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "Tab",
                                  "comparison": "isEqualTo",
                                  "value": "Summary"
                                },
                                "name": "query - 1"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "Select an AVS instance to show performance information"
                                },
                                "name": "text - 6"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Performance",
                                  "items": [
                                    {
                                      "type": 10,
                                      "content": {
                                        "chartId": "cdc934ef-754d-450e-8f48-df06ba1fc457",
                                        "version": "MetricsItem/2.0",
                                        "size": 0,
                                        "chartType": 2,
                                        "resourceType": "Microsoft.AVS/privateClouds",
                                        "metricScope": 0,
                                        "resourceParameter": "RID",
                                        "resourceIds": [
                                          "{RID}"
                                        ],
                                        "timeContextFromParameter": "TimeRange",
                                        "timeContext": {
                                          "durationMs": 172800000
                                        },
                                        "metrics": [
                                          {
                                            "namespace": "microsoft.avs/privateclouds",
                                            "metric": "microsoft.avs/privateclouds--EffectiveCpuAverage",
                                            "aggregation": 4
                                          }
                                        ],
                                        "title": "Average CPU Percentage",
                                        "showRefreshButton": true,
                                        "gridSettings": {
                                          "rowLimit": 10000
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "metric - 0"
                                    },
                                    {
                                      "type": 10,
                                      "content": {
                                        "chartId": "5c45ea12-c13b-4aa7-b4fc-5c49b883120c",
                                        "version": "MetricsItem/2.0",
                                        "size": 0,
                                        "chartType": 2,
                                        "resourceType": "Microsoft.AVS/privateClouds",
                                        "metricScope": 0,
                                        "resourceParameter": "RID",
                                        "resourceIds": [
                                          "{RID}"
                                        ],
                                        "timeContextFromParameter": "TimeRange",
                                        "timeContext": {
                                          "durationMs": 172800000
                                        },
                                        "metrics": [
                                          {
                                            "namespace": "microsoft.avs/privateclouds",
                                            "metric": "microsoft.avs/privateclouds--DiskUsedPercentage",
                                            "aggregation": 4
                                          }
                                        ],
                                        "title": "Percentage Datastore Disk Used",
                                        "showRefreshButton": true,
                                        "gridSettings": {
                                          "rowLimit": 10000
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "metric - 1"
                                    },
                                    {
                                      "type": 10,
                                      "content": {
                                        "chartId": "6071b852-d848-44a7-baa2-71667cdcac3b",
                                        "version": "MetricsItem/2.0",
                                        "size": 0,
                                        "chartType": 2,
                                        "resourceType": "Microsoft.AVS/privateClouds",
                                        "metricScope": 0,
                                        "resourceParameter": "RID",
                                        "resourceIds": [
                                          "{RID}"
                                        ],
                                        "timeContextFromParameter": "TimeRange",
                                        "timeContext": {
                                          "durationMs": 172800000
                                        },
                                        "metrics": [
                                          {
                                            "namespace": "microsoft.avs/privateclouds",
                                            "metric": "microsoft.avs/privateclouds--UsageAverage",
                                            "aggregation": 4
                                          }
                                        ],
                                        "title": "Average Memory Used",
                                        "showRefreshButton": true,
                                        "gridSettings": {
                                          "rowLimit": 10000
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "metric - 2"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "Name",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "Performance"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Summary"
                          },
                          "name": "Group - Summary"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\r\n| where type contains \"microsoft.connectedvmwarevsphere\" and type !contains \"virtualmachines\" and type !contains \"microsoft.connectedvmwarevsphere/virtualnetworks\" and type !contains \"microsoft.connectedvmwarevsphere/virtualmachinetemplates\"\r\n| extend resource = tolower(tostring(split(type, \"/\")[1]))\r\n| summarize count(resource) by resource",
                                  "size": 4,
                                  "exportFieldName": "resource",
                                  "exportParameterName": "R",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "resource",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_resource",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": "query - 0"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\r\n| where type contains \"microsoft.connectedvmwarevsphere\" and type !contains \"virtualmachines\" and type !contains \"microsoft.connectedvmwarevsphere/virtualnetworks\" and type !contains \"microsoft.connectedvmwarevsphere/virtualmachinetemplates\"\r\n| extend resource = tolower(tostring(split(type, \"/\")[1]))\r\n| extend Tag = iff(notempty(tags),tags,\"No Tags\")\r\n//| extend RGID = strcat({Subscription},\"/resourceGroups/\",resourceGroup)\r\n| project id,resource,  resourceGroup, Tag//, RGID\r\n| order by resource",
                                  "size": 0,
                                  "title": "All Resources",
                                  "showRefreshButton": true,
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "resourceGroup",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "RGID",
                                        "formatter": 14,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "labelSettings": [
                                      {
                                        "columnId": "id",
                                        "label": "Name"
                                      },
                                      {
                                        "columnId": "resource",
                                        "label": "Resource"
                                      },
                                      {
                                        "columnId": "resourceGroup",
                                        "label": "Resource Group"
                                      },
                                      {
                                        "columnId": "Tag",
                                        "label": "Tags"
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "R",
                                  "comparison": "isEqualTo"
                                },
                                "name": "query - 1"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\r\n| where type contains \"microsoft.connectedvmwarevsphere\" and type !contains \"virtualmachines\" and type !contains \"microsoft.connectedvmwarevsphere/virtualnetworks\" and type !contains \"microsoft.connectedvmwarevsphere/virtualmachinetemplates\"\r\n| extend resource = tolower(tostring(split(type, \"/\")[1]))\r\n| extend Tag = iff(notempty(tags),tags,\"No Tags\")\r\n| where resource == \"{R}\"\r\n| project id,resource,  resourceGroup, Tag\r\n| order by resource",
                                  "size": 0,
                                  "title": "{R}",
                                  "showRefreshButton": true,
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "gridSettings": {
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "R",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "query - 2"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Resources"
                          },
                          "name": "Group - AVS Resources"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "0d65bc28-3879-4da7-a1f7-792b5e882fd9",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "LatestToolsVer",
                                      "type": 2,
                                      "isRequired": true,
                                      "query": "resources\r\n| where type ==  \"microsoft.connectedvmwarevsphere/virtualmachines\" \r\n| extend toolsVersion = toint(properties.osProfile.toolsVersion)\r\n| project toolsVersion\r\n| order by toolsVersion desc\r\n| top 1 by toolsVersion",
                                      "crossComponentResources": [
                                        "{Subscription}"
                                      ],
                                      "isHiddenWhenLocked": true,
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::1"
                                        ],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "value::1"
                                    },
                                    {
                                      "id": "b0eb1c08-84d5-44a0-8fa0-95f0ab91a37c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "vCenter",
                                      "type": 2,
                                      "isRequired": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "query": "resources\r\n| where type ==  \"microsoft.connectedvmwarevsphere/virtualmachines\" \r\n| extend VSID = tolower(tostring(split(properties.vCenterId, \"/\")[8]))\r\n| project VSID",
                                      "crossComponentResources": [
                                        "{Subscription}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::1",
                                          "value::all"
                                        ],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": [
                                        "value::all"
                                      ]
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                },
                                "name": "parameters - 1"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\r\n| where type ==  \"microsoft.connectedvmwarevsphere/virtualmachines\" \r\n| extend VSID = tolower(tostring(split(properties.vCenterId, \"/\")[8]))\r\n| where VSID in ({vCenter})\r\n| extend OS = properties.osProfile\r\n| extend computerName = properties.osProfile.computerName\r\n| extend osType = properties.osProfile.osType\r\n| extend osName = properties.osProfile.osName\r\n| extend toolsRunningStatus = properties.osProfile.toolsRunningStatus\r\n| extend toolsVersion = toint(properties.osProfile.toolsVersion)\r\n| extend cores = properties.hardwareProfile.numCoresPerSocket\r\n| extend mem = properties.hardwareProfile.memorySizeMB\r\n| extend CPUs = properties.hardwareProfile.numCPUs\r\n| extend Power =  properties.powerState\r\n| project id, VSID, osType, osName,CPUs, cores, mem, Power,toolsRunningStatus, toolsVersion",
                                  "size": 0,
                                  "showRefreshButton": true,
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "VSID",
                                        "formatter": 0,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "20.2857ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "osType",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "colors",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Windows",
                                              "representation": "lightBlue",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Linux",
                                              "representation": "green",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "gray",
                                              "text": "Unknown"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "osName",
                                        "formatter": 1,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "29.1429ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "CPUs",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "cores",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "mem",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Power",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "poweredOn",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Unavailable",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "toolsRunningStatus",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "guestToolsRunning",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "4",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Powered On",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "poweredOn",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "info",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "labelSettings": [
                                      {
                                        "columnId": "id",
                                        "label": "VM"
                                      },
                                      {
                                        "columnId": "VSID",
                                        "label": "vCenter"
                                      },
                                      {
                                        "columnId": "osType",
                                        "label": "OS"
                                      },
                                      {
                                        "columnId": "osName",
                                        "label": "OS Version"
                                      },
                                      {
                                        "columnId": "CPUs",
                                        "label": "CPUs"
                                      },
                                      {
                                        "columnId": "cores",
                                        "label": "Cores"
                                      },
                                      {
                                        "columnId": "mem",
                                        "label": "Memory"
                                      },
                                      {
                                        "columnId": "Power",
                                        "label": "Powered On"
                                      },
                                      {
                                        "columnId": "toolsRunningStatus",
                                        "label": "Guest Managed"
                                      },
                                      {
                                        "columnId": "toolsVersion",
                                        "label": "Tools Version"
                                      }
                                    ]
                                  }
                                },
                                "name": "query - 0"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "VM"
                          },
                          "name": "Group - AVS Virtual Machines"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "9db8b056-5686-409d-a589-9ae87eed9cee",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "ShowHelp",
                                      "label": "Show Alert Help",
                                      "type": 10,
                                      "isRequired": true,
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "jsonData": "[[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n { \"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]",
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "TimeRange"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 5"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "In order to deploy alerts you will need the resource ID for the AVS instance you want to be alerted on. Alerts will also need to be deployed for each seperate AVS instance.\r\n\r\nTo get the resource ID, navigate to the Overview blade of the required AVS instance and click on **\"JSON View\"** in the top right corner. The ID will be at the top of the fly out menu and looks as follow:\r\n\r\n**Example:** /subscriptions/\"subscription ID\"/resourceGroups/\"Resource Group\"/providers/Microsoft.AVS/privateClouds/\"AVS instance name\""
                                },
                                "conditionalVisibility": {
                                  "parameterName": "ShowHelp",
                                  "comparison": "isEqualTo",
                                  "value": "Yes"
                                },
                                "name": "text - 4"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "nav",
                                  "links": [
                                    {
                                      "id": "11763710-bc13-4652-85c8-e2fa66a62c0a",
                                      "cellValue": "https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2FEnterprise-Scale-for-AVS%2Fmain%2FBrownField%2FMonitoring%2FAVS-Utilization-Alerts%2FARM%2FAVSMonitor.deploy.json",
                                      "linkTarget": "Url",
                                      "linkLabel": "Deploy Metric Alerts",
                                      "style": "link"
                                    },
                                    {
                                      "id": "93c23f27-38e9-429c-a1fb-3c24fa4b17fd",
                                      "cellValue": "https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2FEnterprise-Scale-for-AVS%2Fmain%2FBrownField%2FMonitoring%2FAVS-Service-Health%2FARM%2FAVSServiceHealth.deploy.json",
                                      "linkTarget": "Url",
                                      "linkLabel": "Deploy Service Health Alerts",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 6"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "alertsmanagementresources\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n        MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n        AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n        AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n        AlertTarget)\r\n| extend Total = \"TotalAlerts\"\r\n| where (id contains \"microsoft.connectedvmwarevsphere\") or (id contains \"microsoft.avs/privatecloud\")\r\n| summarize TotalAlerts= count(MonitorCondition) by Total",
                                  "size": 4,
                                  "title": "Alert Summary",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "Total",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "TotalAlerts",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "customWidth": "25",
                                "name": "query - 1"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "alertsmanagementresources\r\n| where (id contains \"microsoft.connectedvmwarevsphere\") or (id contains \"microsoft.avs/privatecloud\")\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n        MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n        AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n        AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n        AlertTarget)\r\n| summarize count() by Severity",
                                  "size": 4,
                                  "title": "Severity Summary",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "Severity",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "customWidth": "75",
                                "name": "query - 2"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "alertsmanagementresources\r\n| where (id contains \"microsoft.connectedvmwarevsphere\") or (id contains \"microsoft.avs/privatecloud\")\r\n| extend FireTime = todatetime(properties.essentials.startDateTime), \r\n         LastModifiedTime = todatetime(properties.essentials.lastModifiedDateTime),\r\n         Severity = tostring(properties.essentials.severity), \r\n         MonitorCondition = tostring(properties.essentials.monitorCondition), \r\n         AlertTarget = tostring(properties.essentials.targetResourceType), \r\n         MonitorService = tostring(properties.essentials.monitorService),\r\n         ResolvedTime = todatetime(properties.essentials.monitorConditionResolvedDateTime)\r\n| where FireTime {TimeRange}\r\n| extend AlertTarget = case(\r\n                MonitorService == 'ActivityLog Administrative', 'ActivityLog',\r\n                AlertTarget == 'microsoft.insights/components', 'App Insights',\r\n                AlertTarget == 'microsoft.operationalinsights/workspaces', 'Log Analytics', \r\n                AlertTarget)          \r\n| mv-expand Condition = properties.context.context.condition.allOf\r\n| extend SignalLogic = case(\r\n                MonitorService == \"VM Insights - Health\", strcat(\"VM Health for \", properties.essentials.targetResourceName, \" Changed from \", properties.context.monitorStateBeforeAlertCreated, \" to \", properties.context.monitorStateWhenAlertCreated),\r\n                AlertTarget == \"ActivityLog\", strcat(\"When the Activity Log has Category = \", properties.context.context.activityLog.properties.eventCategory, \" and Signal name = \", properties.context.context.activityLog.properties.message),\r\n                MonitorService == \"Smart Detector\", strcat(properties.SmartDetectorName, \" Detected failure rate of \", properties.DetectedFailureRate, \" above normal failure rate of \", properties.context.NormalFailureRate),\r\n                MonitorService == \"Log Analytics\", strcat(\"Alert when \", properties.context.AlertType, \" is \", properties.context.AlertThresholdOperator, \" threshold \", properties.context.AlertThresholdValue),\r\n                MonitorService == \"ActivityLog Autoscale\", strcat(properties.context.context.activityLog.operationName, \" from \", properties.context.context.activityLog.properties.oldInstancesCount, \" to \", properties.context.context.activityLog.properties.newInstancesCount),\r\n                strcat(\"Alert when metric \", Condition.metricName, Condition.timeAggregation, \" is \", Condition.operator, \" threshold \", Condition.threshold)),\r\n         Query = case(\r\n                 MonitorService == \"Log Alerts V2\", tostring(Condition.searchQuery),\r\n                 MonitorService == \"Log Analytics\", tostring(properties.context.SearchQuery), \"N/A\"),\r\n         MetricValue = iff(MonitorService == \"Log Analytics\", toint(properties.context.ResultCount), toint(Condition.metricValue)),\r\n         ResourceName = iff(AlertTarget == \"ActivityLog\", properties.context.context.activityLog.subscriptionId, tostring(properties.essentials.targetResourceName))\r\n| extend OpenTime = iff(MonitorCondition == \"Resolved\", datetime_diff('minute', ResolvedTime, FireTime), datetime_diff('minute', now(), FireTime)),\r\n         Details = pack_all()\r\n| project name, AlertTarget, id, subscriptionId, MonitorCondition, FireTime, LastModifiedTime, OpenTime, SignalLogic, Query, MetricValue, ResourceName, Details",
                                  "size": 0,
                                  "showRefreshButton": true,
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "$gen_group",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": "OpenBlade",
                                          "linkIsContextBlade": true,
                                          "showIcon": true,
                                          "bladeOpenContext": {
                                            "bladeName": "AlertDetailsTemplateBlade",
                                            "extensionName": "Microsoft_Azure_Monitoring",
                                            "bladeParameters": [
                                              {
                                                "name": "alertId",
                                                "source": "column",
                                                "value": "id"
                                              },
                                              {
                                                "name": "alertName",
                                                "source": "column",
                                                "value": "name"
                                              },
                                              {
                                                "name": "invokedFrom",
                                                "source": "static",
                                                "value": "Workbooks"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "id",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "MonitorCondition",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Fired",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Resolved",
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "FireTime",
                                        "formatter": 6
                                      },
                                      {
                                        "columnMatch": "LastModifiedTime",
                                        "formatter": 6
                                      },
                                      {
                                        "columnMatch": "OpenTime",
                                        "formatter": 8,
                                        "formatOptions": {
                                          "palette": "greenRed"
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "hierarchySettings": {
                                      "treeType": 1,
                                      "groupBy": [
                                        "subscriptionId"
                                      ],
                                      "expandTopLevel": true,
                                      "finalBy": "name"
                                    }
                                  }
                                },
                                "name": "query - 0"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Alerts"
                          },
                          "name": "Group - Alerts"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "1a79bc93-b09a-4bb4-93d3-ea8c184736fa",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "HostName",
                                      "type": 2,
                                      "isRequired": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "query": "AVSSyslog \r\n| distinct HostName",
                                      "crossComponentResources": [
                                        "{Workspace}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "TimeRange",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": [
                                        "value::all"
                                      ]
                                    },
                                    {
                                      "id": "d4044f39-295b-4158-adc7-e82afee13409",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AppName",
                                      "type": 2,
                                      "isRequired": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "query": "AVSSyslog \r\n| distinct AppName",
                                      "crossComponentResources": [
                                        "{Workspace}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "TimeRange",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": [
                                        "value::all"
                                      ]
                                    },
                                    {
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Severity",
                                      "type": 2,
                                      "isRequired": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "query": "AVSSyslog \r\n| distinct Severity",
                                      "crossComponentResources": [
                                        "{Workspace}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "TimeRange",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": [
                                        "value::all"
                                      ],
                                      "id": "83f0c115-953b-42db-870c-b22344745fba"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 0"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "AVSSyslog \r\n| where HostName in ({HostName})\r\n| where AppName in ({AppName})\r\n| where Severity in ({Severity}) or '*' in ({Severity})\r\n| summarize count() by Severity",
                                  "size": 4,
                                  "title": "Count of records by severity",
                                  "timeContextFromParameter": "TimeRange",
                                  "exportFieldName": "Severity",
                                  "exportParameterName": "Sev",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "Severity",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    "showBorder": true
                                  }
                                },
                                "name": "query - 2"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "Enable collection of SysLog to your Log Analytics workspace with diagnostic settings on your AVS instance."
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "AVSSyslog \r\n| where HostName in ({HostName})\r\n| where AppName in ({AppName})\r\n| where Severity in ({Severity}) or '*' in ({Severity})\r\n| project TimeGenerated, HostName, AppName, Facility, Severity, Message",
                                  "size": 2,
                                  "timeContextFromParameter": "TimeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Severity",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "debug",
                                              "representation": "question",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "warn",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "err",
                                              "representation": "3",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "notice",
                                              "representation": "Normal",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "alert",
                                              "representation": "Fired",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "1",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Message",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true
                                        }
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "name": "query - 1"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "SysLog"
                          },
                          "name": "group - SysLog"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "### Azure Advisor recommendations for Azure VMware Solution"
                                },
                                "name": "text - 1"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "88c663d7-da13-44da-a53f-15f8fdb1ca57",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Impact",
                                      "type": 2,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "query": "AdvisorResources\r\n| where type == 'microsoft.advisor/recommendations'\r\n| extend imp = tostring(properties.impact)\r\n| distinct imp",
                                      "crossComponentResources": [
                                        "{Subscription}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": [
                                        "value::all"
                                      ]
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                },
                                "name": "parameters - 2"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "AdvisorResources\r\n| where type == 'microsoft.advisor/recommendations'\r\n| where properties.resourceMetadata.source contains \"AVS\" or properties.resourceMetadata.source contains \"vmware\"\r\n| extend SD = tostring(properties.shortDescription.solution)\r\n| extend cat = tostring(properties.category)\r\n| extend imp = tostring(properties.impact)\r\n| extend LU = tostring(properties.lastUpdated)\r\n| extend IR = tostring(properties.impactedValue)\r\n| where imp in ({Impact}) //or '*' in ({Impact})\r\n| project IR, resourceGroup, SD, cat, imp, LU,subscriptionId",
                                  "size": 0,
                                  "showRefreshButton": true,
                                  "showExportToExcel": true,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "IR",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "GenericDetails",
                                          "linkIsContextBlade": true,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "SD",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true
                                        }
                                      },
                                      {
                                        "columnMatch": "imp",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "colors",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "High",
                                              "representation": "redBright",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Medium",
                                              "representation": "yellow",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Low",
                                              "representation": "blue",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "blue",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "LU",
                                        "formatter": 6
                                      }
                                    ],
                                    "filter": true,
                                    "labelSettings": [
                                      {
                                        "columnId": "IR",
                                        "label": "Resource"
                                      },
                                      {
                                        "columnId": "resourceGroup",
                                        "label": "RG"
                                      },
                                      {
                                        "columnId": "SD",
                                        "label": "Description"
                                      },
                                      {
                                        "columnId": "cat",
                                        "label": "Category"
                                      },
                                      {
                                        "columnId": "imp",
                                        "label": "Impact"
                                      },
                                      {
                                        "columnId": "LU",
                                        "label": "Last Updated"
                                      },
                                      {
                                        "columnId": "subscriptionId",
                                        "label": "Subscription"
                                      }
                                    ]
                                  }
                                },
                                "name": "query - 0"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Advisor"
                          },
                          "name": "group - Advisor"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "88593ed5-65af-436c-a72e-ea92df78cc42",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "ShowHelpA",
                                      "label": "Show Activity Help",
                                      "type": 10,
                                      "isRequired": true,
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "jsonData": "[[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n { \"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]",
                                      "timeContext": {
                                        "durationMs": 1800000
                                      }
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 1"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "**In order for this section to display activity data first ensure that Azure activity log collection from your AVS Private Cloud to Log Analytics is enabled.**\r\n\r\nThis can be done from the Activity log blade of Azure Monitor.\r\n\r\nIf this is not enabled you may see the following message **\"'project' operator: Failed to resolve scalar expression named 'message'\"**\r\n\r\n"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "ShowHelpA",
                                  "comparison": "isEqualTo",
                                  "value": "Yes"
                                },
                                "name": "text - 2"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "AzureActivity \r\n| where ResourceProviderValue ==\"MICROSOFT.AVS\"\r\n| extend prop = parse_json(Properties)\r\n| evaluate bag_unpack(prop)\r\n| project TimeGenerated, message, Level, ActivityStatusValue, Caller",
                                  "size": 0,
                                  "showAnalytics": true,
                                  "title": "AVS Activity",
                                  "timeContextFromParameter": "TimeRange",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "TimeGenerated",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "TimeGenerated",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "name": "query - 4"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Activity"
                          },
                          "name": "group - Activity"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "where  type == \"microsoft.avs/privateclouds\"\r\n| where id in ({AVSInstance})\r\n| summarize count() by location",
                                  "size": 3,
                                  "title": "AVS Instance Locations",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscription}"
                                  ],
                                  "visualization": "map",
                                  "mapSettings": {
                                    "locInfo": "AzureLoc",
                                    "locInfoColumn": "location",
                                    "sizeSettings": "count_",
                                    "sizeAggregation": "Sum",
                                    "minSize": 20,
                                    "maxSize": 70,
                                    "labelSettings": "location",
                                    "legendMetric": "count_",
                                    "legendAggregation": "Sum",
                                    "itemColorSettings": {
                                      "nodeColorField": "count_",
                                      "colorAggregation": "Sum",
                                      "type": "heatmap",
                                      "heatmapPalette": "orangeBlue"
                                    }
                                  }
                                },
                                "name": "query - 0"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Location"
                          },
                          "name": "Group - Location"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "### Select a subscription to access quota information"
                                },
                                "name": "text - 3 - Copy"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "468a2975-ba5d-43e2-a55b-c3bd89257722",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Subscription",
                                      "type": 6,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::1"
                                        ],
                                        "includeAll": true,
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": "value::1"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 0"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "1afa403e-9976-4ee8-8764-5348d1217903",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "eastus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/eastus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "f16d9346-a225-4205-93ce-3a21d223e579",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "germanywestcentral",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/germanywestcentral/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "ea8281bf-abfb-430b-ac91-e0cbabc74568",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "northeurope",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/northeurope/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "f5fd95e4-fc19-48a1-9091-5968dfe54741",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "brazilsouth",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/brazilsouth/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "632a9f3f-d2ef-41b4-9cfa-b47ee8b4b505",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "francecentral",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/francecentral/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "59ccceb3-74da-4b17-8ad1-ad9befd8db21",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "westcentralus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/westcentralus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "3b0ec634-2f2c-49cb-8193-50b0d8ea4c3c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "northcentralus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/northcentralus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "ca440088-1260-4a72-9540-4bd7d9304718",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "westus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/westus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "93ad664b-8ae2-4c92-8a4b-094237d01df9",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "westeurope",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/westeurope/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "31673271-3f9e-4312-9077-64e38c40e95e",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "australiaeast",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/australiaeast/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.hostsRemaining.he\",\"columns\":[]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "f4760aef-ad3e-4b47-9e68-611242bfe019",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "southcentralus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/southcentralus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "8f661698-07c6-4e17-ac26-5b3bf0d6c0b9",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "japaneast",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/japaneast/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "613f2d38-69c8-4cac-98fb-4601c2a084d0",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "japanwest",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/japanwest/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "4d91dcc2-cd6a-4b54-ac12-e55df518979b",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "uksouth",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/uksouth/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "1ccf2914-19a8-44c0-a59b-0912fe38294a",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "canadacentral",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/canadacentral/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "45318b9a-d335-4585-be14-6d1a7e28c525",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "southeastasia",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/southeastasia/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "b115ff88-763a-4e60-ba5d-df9e2c98e8c3",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "ukwest",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/ukwest/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "b6034f71-ded9-40ee-8b1c-eeb03a82bfe8",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "eastus2",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/eastus2/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "07ba4c6c-3eba-4d88-8158-fa18f45e73fc",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "centralus",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/centralus/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "e102f6df-36a0-4bd2-9634-b8b5fdcd9a52",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "australiasoutheast",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/australiasoutheast/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "a8098363-78a2-464f-8fc1-49e9d34afcdf",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "canadaeast",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/canadaeast/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "id": "b0bafe2e-6c7a-4e00-b2b9-44bdc2711489",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "eastasia",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/eastasia/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "value": null
                                    },
                                    {
                                      "version": "KqlParameterItem/1.0",
                                      "name": "southafricanorth",
                                      "type": 1,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:subscriptionid}/providers/Microsoft.AVS/locations/southafricanorth/checkQuotaAvailability?api-version=2021-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"columns\":[{\"path\":\"$.hostsRemaining.he\",\"columnid\":\"he\",\"columnType\":\"long\"}]}}]}",
                                      "isHiddenWhenLocked": true,
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 12,
                                      "id": "4a6521de-68e7-4079-8e63-672737025eac",
                                      "value": null
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 12
                                },
                                "name": "AVS Available Quota map"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "",
                                  "size": 2,
                                  "exportToExcelOptions": "all",
                                  "queryType": 2,
                                  "visualization": "map",
                                  "mapSettings": {
                                    "locInfo": "AzureLoc",
                                    "locInfoColumn": "Parameter name",
                                    "sizeSettings": "Value",
                                    "sizeAggregation": "Sum",
                                    "minSize": 1,
                                    "minData": 0,
                                    "defaultSize": 0,
                                    "legendMetric": "Value",
                                    "legendAggregation": "Average",
                                    "itemColorSettings": {
                                      "nodeColorField": "Value",
                                      "colorAggregation": "Sum",
                                      "type": "heatmap",
                                      "heatmapPalette": "redGreen"
                                    },
                                    "numberFormatSettings": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false
                                      }
                                    }
                                  }
                                },
                                "name": "query - 1"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "# Legend\r\n- Red: No quota remaining\r\n- Yellow:  3 quota remaining\r\n- Green: > 3 quota remaining"
                                },
                                "name": "text - 3"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "Tab",
                            "comparison": "isEqualTo",
                            "value": "Quota"
                          },
                          "name": "Group - Quota"
                        }
                      ],
                      "isLocked": false,
                      "fallbackResourceIds": [
                        "Azure Monitor"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2021-03-08",
                      "name": "[parameters('workbookId')]",
                      "location": "[parameters('Location')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "[variables('WorkbookDisplayName')]",
                        "serializedData": "[string(variables('workbookContent'))]",
                        "version": "1.0",
                        "sourceId": "Azure Monitor",
                        "category": "workbook"
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "workbookId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/workbooks', parameters('workbookId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('MonitoringResourceGroupName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix')))]"
      ]
    },
    {
      "condition": "[parameters('DeployDiagnostics')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Diagnostics', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LoggingResourceGroupName": {
            "value": "[variables('customLoggingResourceGroupName')]"
          },
          "EnableAVSLogsWorkspaceSetting": {
            "value": "[parameters('EnableAVSLogsWorkspaceSetting')]"
          },
          "DeployActivityLogDiagnostics": {
            "value": "[parameters('DeployActivityLogDiagnostics')]"
          },
          "EnableAVSLogsStorageSetting": {
            "value": "[parameters('EnableAVSLogsStorageSetting')]"
          },
          "DeployWorkspace": {
            "value": "[parameters('DeployWorkspace')]"
          },
          "NewWorkspaceName": {
            "value": "[variables('customWorkspaceName')]"
          },
          "DeployStorageAccount": {
            "value": "[parameters('DeployStorageAccount')]"
          },
          "NewStorageAccountName": {
            "value": "[variables('customStorageAccountName')]"
          },
          "PrivateCloudName": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudName.value), createObject('value', parameters('ExistingPrivateCloudName')))]",
          "PrivateCloudResourceId": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudResourceId.value), createObject('value', parameters('ExistingPrivateCloudResourceId')))]",
          "ExistingWorkspaceId": {
            "value": "[parameters('ExistingWorkspaceId')]"
          },
          "ExistingStorageAccountId": {
            "value": "[parameters('ExistingStorageAccountId')]"
          },
          "tags": "[if(parameters('avsUseCustomTagging'), createObject('value', union(variables('varCustomResourceTags'), variables('varAVSDefaultTags'))), createObject('value', variables('varAVSDefaultTags')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "8917032050059887904"
            }
          },
          "parameters": {
            "Location": {
              "type": "string",
              "defaultValue": ""
            },
            "LoggingResourceGroupName": {
              "type": "string",
              "defaultValue": ""
            },
            "PrivateCloudName": {
              "type": "string",
              "defaultValue": ""
            },
            "PrivateCloudResourceId": {
              "type": "string",
              "defaultValue": ""
            },
            "EnableAVSLogsWorkspaceSetting": {
              "type": "bool",
              "defaultValue": false
            },
            "NewWorkspaceName": {
              "type": "string",
              "defaultValue": ""
            },
            "NewStorageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "DeployActivityLogDiagnostics": {
              "type": "bool",
              "defaultValue": false
            },
            "EnableAVSLogsStorageSetting": {
              "type": "bool",
              "defaultValue": false
            },
            "ExistingWorkspaceId": {
              "type": "string"
            },
            "ExistingStorageAccountId": {
              "type": "string"
            },
            "DeployWorkspace": {
              "type": "bool"
            },
            "DeployStorageAccount": {
              "type": "bool"
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to be applied to resources"
              }
            }
          },
          "variables": {
            "PrivateCloudResourceGroupName": "[split(parameters('PrivateCloudResourceId'), '/')[4]]"
          },
          "resources": [
            {
              "condition": "[or(parameters('DeployWorkspace'), parameters('DeployStorageAccount'))]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('LoggingResourceGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[parameters('DeployWorkspace')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Workspace', deployment().name)]",
              "resourceGroup": "[parameters('LoggingResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "NewWorkspaceName": {
                    "value": "[parameters('NewWorkspaceName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "16974942857296665741"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "NewWorkspaceName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to be applied to resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2022-10-01",
                      "name": "[parameters('NewWorkspaceName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "WorkspaceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('NewWorkspaceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('LoggingResourceGroupName'))]"
              ]
            },
            {
              "condition": "[parameters('DeployStorageAccount')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Storage', deployment().name)]",
              "resourceGroup": "[parameters('LoggingResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "NewStorageAccountName": {
                    "value": "[parameters('NewStorageAccountName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "7771121048702855542"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "NewStorageAccountName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "metadata": {
                        "description": "Tags to be applied to resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-05-01",
                      "name": "[parameters('NewStorageAccountName')]",
                      "location": "[parameters('Location')]",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot"
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "StorageAccountName": {
                      "type": "string",
                      "value": "[parameters('NewStorageAccountName')]"
                    },
                    "StorageAccountid": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('NewStorageAccountName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('LoggingResourceGroupName'))]"
              ]
            },
            {
              "condition": "[or(parameters('EnableAVSLogsWorkspaceSetting'), parameters('EnableAVSLogsStorageSetting'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-AVSDiagnostics', deployment().name)]",
              "resourceGroup": "[variables('PrivateCloudResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "Workspaceid": "[if(parameters('DeployWorkspace'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Workspace', deployment().name)), '2022-09-01').outputs.WorkspaceId.value), createObject('value', parameters('ExistingWorkspaceId')))]",
                  "StorageAccountid": "[if(parameters('DeployStorageAccount'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Storage', deployment().name)), '2022-09-01').outputs.StorageAccountid.value), createObject('value', parameters('ExistingStorageAccountId')))]",
                  "EnableAVSLogsWorkspaceSetting": {
                    "value": "[parameters('EnableAVSLogsWorkspaceSetting')]"
                  },
                  "EnableAVSLogsStorageSetting": {
                    "value": "[parameters('EnableAVSLogsStorageSetting')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "12440865007524563068"
                    }
                  },
                  "parameters": {
                    "PrivateCloudName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Workspaceid": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "StorageAccountid": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "EnableAVSLogsWorkspaceSetting": {
                      "type": "bool"
                    },
                    "EnableAVSLogsStorageSetting": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('EnableAVSLogsWorkspaceSetting')]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.AVS/privateClouds/{0}', parameters('PrivateCloudName'))]",
                      "name": "Logs-to-Workspace",
                      "properties": {
                        "workspaceId": "[parameters('Workspaceid')]",
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true
                          }
                        ],
                        "logs": [
                          {
                            "category": "VMwareSyslog",
                            "enabled": true
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[parameters('EnableAVSLogsStorageSetting')]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.AVS/privateClouds/{0}', parameters('PrivateCloudName'))]",
                      "name": "Logs-to-StorageAccount",
                      "properties": {
                        "storageAccountId": "[parameters('StorageAccountid')]",
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true
                          }
                        ],
                        "logs": [
                          {
                            "category": "VMwareSyslog",
                            "enabled": true
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Storage', deployment().name))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Workspace', deployment().name))]"
              ]
            },
            {
              "condition": "[parameters('DeployActivityLogDiagnostics')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-ActivityLogDiagnostics', deployment().name)]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "WorkspaceId": "[if(parameters('DeployWorkspace'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Workspace', deployment().name)), '2022-09-01').outputs.WorkspaceId.value), createObject('value', parameters('ExistingWorkspaceId')))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "6947806775385453446"
                    }
                  },
                  "parameters": {
                    "WorkspaceId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "name": "Collect-ActivityLogs",
                      "properties": {
                        "workspaceId": "[parameters('WorkspaceId')]",
                        "logs": [
                          {
                            "category": "Administrative",
                            "enabled": true
                          },
                          {
                            "category": "Security",
                            "enabled": true
                          },
                          {
                            "category": "ServiceHealth",
                            "enabled": true
                          },
                          {
                            "category": "Alert",
                            "enabled": true
                          },
                          {
                            "category": "Recommendation",
                            "enabled": true
                          },
                          {
                            "category": "Policy",
                            "enabled": true
                          },
                          {
                            "category": "Autoscale",
                            "enabled": true
                          },
                          {
                            "category": "ResourceHealth",
                            "enabled": true
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('LoggingResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-Workspace', deployment().name))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix')))]"
      ]
    },
    {
      "condition": "[or(parameters('DeployHCX'), parameters('DeploySRM'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-AVSAddons', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrivateCloudName": "[if(parameters('DeployPrivateCloud'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudName.value), createObject('value', parameters('ExistingPrivateCloudName')))]",
          "PrivateCloudResourceGroup": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix'))), '2022-09-01').outputs.PrivateCloudResourceGroupName.value]"
          },
          "DeployHCX": {
            "value": "[parameters('DeployHCX')]"
          },
          "DeploySRM": {
            "value": "[parameters('DeploySRM')]"
          },
          "SRMLicenseKey": {
            "value": "[parameters('SRMLicenseKey')]"
          },
          "VRServerCount": {
            "value": "[parameters('VRServerCount')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "11960748730171207024"
            }
          },
          "parameters": {
            "PrivateCloudName": {
              "type": "string"
            },
            "PrivateCloudResourceGroup": {
              "type": "string"
            },
            "DeployHCX": {
              "type": "bool"
            },
            "DeploySRM": {
              "type": "bool"
            },
            "SRMLicenseKey": {
              "type": "string"
            },
            "VRServerCount": {
              "type": "int",
              "minValue": 1,
              "maxValue": 10
            }
          },
          "resources": [
            {
              "condition": "[parameters('DeployHCX')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-HCX', deployment().name)]",
              "resourceGroup": "[parameters('PrivateCloudResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "10392797652933285068"
                    }
                  },
                  "parameters": {
                    "PrivateCloudName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AVS/privateClouds/addons",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('PrivateCloudName'), 'hcx')]",
                      "properties": {
                        "addonType": "HCX",
                        "offer": "VMware MaaS Cloud Provider"
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[parameters('DeploySRM')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-SRM', deployment().name)]",
              "resourceGroup": "[parameters('PrivateCloudResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  },
                  "SRMLicenseKey": {
                    "value": "[parameters('SRMLicenseKey')]"
                  },
                  "VRServerCount": {
                    "value": "[parameters('VRServerCount')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "9901385815055500514"
                    }
                  },
                  "parameters": {
                    "PrivateCloudName": {
                      "type": "string"
                    },
                    "SRMLicenseKey": {
                      "type": "string"
                    },
                    "VRServerCount": {
                      "type": "int",
                      "minValue": 1,
                      "maxValue": 10
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AVS/privateClouds/addons",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('PrivateCloudName'), 'srm')]",
                      "properties": {
                        "licenseKey": "[parameters('SRMLicenseKey')]",
                        "addonType": "SRM"
                      }
                    },
                    {
                      "type": "Microsoft.AVS/privateClouds/addons",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('PrivateCloudName'), 'vr')]",
                      "properties": {
                        "vrsCount": "[parameters('VRServerCount')]",
                        "addonType": "VR"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.AVS/privateClouds/addons', parameters('PrivateCloudName'), 'srm')]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-AVS', variables('deploymentPrefix')))]"
      ]
    },
    {
      "condition": "[not(parameters('TelemetryOptOut'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().name, parameters('Location')))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "2976306977123719457"
            }
          },
          "resources": []
        }
      }
    }
  ]
}