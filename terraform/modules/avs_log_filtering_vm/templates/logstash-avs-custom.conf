input {
    azure_event_hubs {
        event_hub_connections => ["${eventhubconnectionstring}"]
        threads => 16
        decorate_events => true
        consumer_group => "${eventhubconsumergroupname}"
        storage_connection => "${eventhubinputstorageaccountconnectionstring}"
    }
}

filter {
    json {
        source => "message"
    }
    split {
        field => "[records]"
    }
    mutate {
        remove_field => ["message"]
    }
    if [records][properties][severity] in ["info", "debug"] {
            drop { }
    }    
    mutate {
        add_field => {
            "ResourceId" => "%{[records][resourceId]}"
            "LogCreationTime" => "%{[records][time]}"
            "TimeGenerated" => "%{[records][time]}"
            "Severity" => "%{[records][properties][severity]}"
            "Facility" => "%{[records][properties][facility]}"
            "Message" => "%{[records][properties][message]}"            
        }

        remove_field => ["records","event", "@version","@timestamp"]
    }
}

output {
    microsoft-sentinel-logstash-output-plugin {
      client_app_Id => "${lawpluginappid}"
      client_app_secret => "${lawpluginappsecret}"
      tenant_id => "${lawplugintenantid}"
      data_collection_endpoint => "${lawplugindatacollectionendpointuri}"
      dcr_immutable_id => "${lawplugindcrimmutableid}"
      dcr_stream_name => "${lawplugindcrstreamname}"
      create_sample_file => false #must be false to send data to Log Analytics, set to true for testing
      sample_file_path => "/tmp" #file location where a sample file will be written if create_sample_file is true
    }

    #stdout {} #uncomment this for testing
}


